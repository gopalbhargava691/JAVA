a.) Shallow Cloning - 

public class BankAccount implements Cloneable {
    public double balance = 0;
    
    public BankAccount (double balance) {
        super();
        this.balance = balance;
    }
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }
    public static void main (String[] args) throws CloneNotSupportedException {
        
        BankAccount b1 = new BankAccount(5000);
        BankAccount b2 = (BankAccount) b1.clone();
        
        b2.balance = 7000;
        System.out.println(b1.balance);
        System.out.println(b2.balance);
    }
}    
    
-------------------------------------------

b.) Deep Cloning - 

//It uses two classes Customer and Bank Account - 

public class Customer implements Cloneable {
    
    public String name = null;
    public BankAccount account = null;
    
    public Customer (String n) {
        name = n;
        account = new BankAccount (54000);
    }
    public Object clone() throws CloneNotSupportedException {
        
        Customer c = (Customer)super.clone();
        c.account = (BankAccount)account.clone();
        return c;
    }
    public static void main (String[] args) throws CloneNotSupportedException {
        
        Customer c1 = new Customer("abc");
        Customer c2 = (Customer)c1.clone();
        
    System.out.println(c2.name);
    System.out.println(c2.account.balance);
    
        c2.name = "xyz";
        c2.AccountBalance = 65000;
        
    //Original - 
    System.out.println("Name:" + c1.name);
    System.out.println("Balance:" + c1.account.balance); 
    
    //After Cloning - 
    System.out.println("Name:" + c2.name);
    System.out.println("Balance:" + c2.account.balance);    
    }
}
